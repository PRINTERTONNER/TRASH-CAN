import tensorflow as tf
import numpy as np
tf.set_random_seed(777)

xy = np.loadtxt('data-01-test-score.csv', delimiter = ',', dtype = np.float32)

x_data = xy[:, 0:-1]
y_data = xy[:, [-1]]

print(x_data.shape, x_data, len(x_data))
print(y_data.shape, y_data)

X = tf.placeholder(tf.float32, shape = [None, 3])    #n행 3열까지의 데이터를 X로 출력
Y = tf.placeholder(tf.float32, shape = [None, 1])    #n행 1열까지의 데이터를 Y로 출력

W = tf.Variable(tf.random_normal([3, 1]), name = 'weight')  #tf.Variable(tf.random_normal([3, 1]), name = 'weight') tf.Variable = 변수지정을 위한 함수
b = tf.Variable(tf.random_normal([1]), name = 'bias')       #tf.Variable(tf.random_normal([1]), name = 'bias')  tf.random_normal = 변수지정 [3,1]형태의 변수와 [1] 형태의 변수

hypothesis = tf.matmul(X,W) + b  #행렬의 계산을 나타내는 함수 tf.matmul(X,Y) + b    =    WX + b

cost = tf.reduce_mean(tf.square(hypothesis - Y))

optimizer = tf.train.GradientDescentOptimizer(learning_rate = 0.00005)
train = optimizer.minimize(cost)

sess = tf.Session()

sess.run(tf.global_variables_initializer())

for step in range(2001):
    cost_val, hy_val, _ = sess.run(
        [cost, hypothesis, train],
        feed_dict = {X: x_data, Y: y_data})
    if step % 10 == 0:
            print(step, "cost: ", cost_val,
                "\nPrediction:\n", hy_val)


print("Your score will b", sess.run(hypothesis,
        feed_dict = {X:[[100,70,101]]}))
print("other scores will be", sess.run(hypothesis,
        feed_dict = {X: [[60,70,110],[90,100,80]]}))